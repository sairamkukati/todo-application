[tox]
envlist = py{312,313}
toxworkdir=.tox
download=true
isolated_build = true

[pytest]
testpaths = tests
python_files = tests.py test_*.py *_tests.py

[testingenv]
deps =
    coverage
    pytest
    pytest-cov

[checkerenv]
deps =
    bandit[toml]
    black
    flake8
    mypy
    pycodestyle

[pycodestyle]
max-line-length = 88
exclude =
    .coverage,
    .eggs,
    .git,
    .tox,
    .pytest_cache,
    build,
    coverage,
    dist,
    venv,
    __pycache__,

[flake8]
max-line-length = 88
exclude =
    .eggs,
    .git,
    .tox,
    build,
    coverage,
    dist,
    venv,
    __pycache__,

[testenv:py{312,313}-mypy]
description = Runs mypy type checker. See: https://github.com/python/mypy
envdir =
    py312: {toxworkdir}/.py312-checkers
    py313: {toxworkdir}/.py313-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = mypy {toxinidir}/src --install-types --non-interactive

[testenv:py{312,313}-pycodestyle]
description = Runs pycodestyle style checker. See: https://github.com/pycqa/pycodestyle
envdir =
    py312: {toxworkdir}/.py312-checkers
    py313: {toxworkdir}/.py313-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = pycodestyle {toxinidir}/src

[testenv:py{312,313}-flake8]
description = Runs flake8 style checker. See: https://github.com/pycqa/flake8
envdir =
    py312: {toxworkdir}/.py312-checkers
    py313: {toxworkdir}/.py313-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = flake8 {toxinidir}/src

[testenv:py{312,313}-black-check]
description = Runs black to check the code style. See: https://github.com/psf/black
envdir =
    py312: {toxworkdir}/.py312-checkers
    py313: {toxworkdir}/.py313-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = black {toxinidir}/src --check --diff

[testenv:py{312,313}-black-format]
description = Runs black to reformat code to style guide. See: https://github.com/psf/black
envdir =
    py312: {toxworkdir}/.py312-checkers
    py313: {toxworkdir}/.py313-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = black {toxinidir}/src

[testenv:py{312,313}-bandit]
description = Runs bandit security linter. See: https://github.com/pycqa/bandit
envdir =
    py312: {toxworkdir}/.py312-checkers
    py313: {toxworkdir}/.py313-checkers
skip_install = true
deps = {[checkerenv]deps}
commands = bandit {toxinidir}/src -x ./.eggs,./.git,./.tox,./build,./coverage,./dist,./venv,./__pycache__,*tests* -r {toxinidir}
